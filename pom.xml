<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.uberfire</groupId>
  <artifactId>uberfire-website</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-http</artifactId>
        <version>2.5</version>
      </extension>
    </extensions>
    <plugins>

      <!-- Using Wagon to grab the latest quick-start and tutorial asciidoc 
        files from github -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>wagon-maven-plugin</artifactId>
        <version>1.0-beta-4</version>

        <configuration>
          <serverId>github-uberfire</serverId>
          <url>https://raw.github.com/uberfire/uberfire/master/uberfire-docs/src/main/asciidoc/</url>
          <toDir>${project.build.directory}/asciidoc-staging</toDir>
        </configuration>

        <!-- download sections of the user guide to the asciidoc staging area -->
        <executions>
          <execution>
            <id>download-tutorial-asciidoc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>download-single</goal>
            </goals>
            <configuration>
              <fromFile>tutorial.asciidoc</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-quick-start-asciidoc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>download-single</goal>
            </goals>
            <configuration>
              <fromFile>quick-start.asciidoc</fromFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- copy the freemarker templates to the staging area -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="target/freemarker-staging"/>
                <copy todir="target/freemarker-staging">
                  <fileset dir="src/main/freemarker" includes="**"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Process asciidoc from the staging area into the webapp target dir -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>0.1.3.1</version>
        <executions>
          <execution>
            <id>output-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html</backend>
              <templateDir>src/main/asciidoc/templates/</templateDir>
              <headerFooter>true</headerFooter>
              <sourceDirectory>${project.build.directory}/asciidoc-staging</sourceDirectory>
              <outputDirectory>${project.build.directory}/freemarker-staging</outputDirectory>
              <attributes>
                <link-suffix>.html</link-suffix>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
  
      <!-- compile less sources into css stylesheet in the target webapp dir -->
      <plugin>
        <groupId>org.lesscss</groupId>
        <artifactId>lesscss-maven-plugin</artifactId>
        <version>1.3.3</version>
        <configuration>
          <sourceDirectory>${project.basedir}/src/main/bootstrap/less</sourceDirectory>
          <outputDirectory>${project.build.directory}/${project.build.finalName}/css</outputDirectory>
          <compress>true</compress>
          <includes>
            <include>bootstrap.less</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- process freemarker templates from the staging area into the webapp target dir -->
      <plugin>
        <configuration>
          <cfgFile>src/main/freemarker/config.fmpp</cfgFile>
          <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
          <templateDirectory>${project.build.directory}/freemarker-staging</templateDirectory>
        </configuration>
        <groupId>com.googlecode.fmpp-maven-plugin</groupId>
        <artifactId>fmpp-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>openshift</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.3</version>
            <configuration>
              <outputDirectory>deployments</outputDirectory>
              <warName>ROOT</warName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
